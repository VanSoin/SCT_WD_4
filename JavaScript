let tasks = [];

function addTask() {
    const taskInput = document.getElementById('taskInput');
    const taskDateTime = document.getElementById('taskDateTime');
    const notification = document.getElementById('notification');

    // Ensure task and date/time are provided
    if (taskInput.value === '' || taskDateTime.value === '') {
        alert('Please add both a task and date/time!');
        return;
    }

    // Create a new task object
    const task = {
        id: Date.now(),
        text: taskInput.value,
        dateTime: taskDateTime.value,
        completed: false
    };

    tasks.push(task);  // Add task to the array
    renderTasks();     // Update the task list display

    // Show the notification
    notification.textContent = 'Task successfully added!';
    notification.classList.add('show');  // Add the show class to make it visible

    // Hide the notification after 2 seconds
    setTimeout(() => {
        notification.classList.remove('show');
    }, 2000);  // Hide after 2 seconds

    // Clear the input fields
    taskInput.value = '';
    taskDateTime.value = '';
}

// Function to render tasks in the list
function renderTasks() {
    const taskList = document.getElementById('taskList');
    taskList.innerHTML = '';  // Clear the current task list

    tasks.forEach(task => {
        const taskItem = document.createElement('li');
        taskItem.classList.add(task.completed ? 'completed' : '');

        taskItem.innerHTML = `
            <span>${task.text} - ${new Date(task.dateTime).toLocaleString()}</span>
            <div class="task-buttons">
                <button class="complete-btn" onclick="toggleComplete(${task.id})">✔</button>
                <button class="edit-btn" onclick="editTask(${task.id})">✎</button>
                <button class="delete-btn" onclick="deleteTask(${task.id})">✖</button>
            </div>
        `;

        taskList.appendChild(taskItem);  // Add the task to the list
    });
}

// Function to mark a task as complete
function toggleComplete(id) {
    tasks = tasks.map(task => {
        if (task.id === id) {
            return { ...task, completed: !task.completed };
        }
        return task;
    });
    renderTasks();
}

// Function to delete a task
function deleteTask(id) {
    tasks = tasks.filter(task => task.id !== id);  // Remove the task from the array
    renderTasks();
}

// Function to edit a task
function editTask(id) {
    const taskToEdit = tasks.find(task => task.id === id);
    const newTaskText = prompt('Edit task', taskToEdit.text);
    const newDateTime = prompt('Edit date/time', taskToEdit.dateTime);

    if (newTaskText !== null && newDateTime !== null) {
        taskToEdit.text = newTaskText;
        taskToEdit.dateTime = newDateTime;
        renderTasks();
    }
}

